# These are some recommendations for translating FreecodeCamp to any language

Vladimir Támara Patiño (vtamara). [vtamara@pasosdeJesus.org](mailto:vtamara@pasosdeJesus.org) Public Domain according to the Colombian law.

Juan Martínez (justinian336). [jnelsonm64@gmail.com](mailto:jnelsonm64@gmail.com)

Thank yo uso much for your interest in translating FreeCodeCamp. This document is a recommended reading for anyone who wishes to participate in this collective effort to give access to FreeCodeCamp to more and more people around the world.


# 1. Chat room

We recommend you to create a chat room in gitter.im exclusive for the language that you're working on. That way, everyone can ask questions regarding the status of the translation and coordinate. Help regarding the technical process should also be provided in the chat room. Many people want to collaborate, but get intimidated by the learning curve of Git. While it's not difficult to get started, it's always nice to have someone to help you if you get stuck.


# 2. Technical procedure to create a translated file

* Install git in your computer and create an account in github.com.
* From your github.com account *fork* the FreeCodeCamp repository (https://github.com/FreeCodeCamp/FreeCodeCamp). A directory for the forked repository should appear in your account.
* Clone your fork into your computer as in the following example (replace the word myaccount with your github account's name  [find some help here](https://help.github.com/articles/fork-a-repo/)):
```sh
git clone --depth=1 https://github.com/myaccount/FreeCodeCamp.git
cd FreeCodeCamp
```
*  Now, on GitHub, go to the *issues* section of the official repository and search for the language you wanna work on (i.e https://github.com/FreeCodeCamp/FreeCodeCamp/issues?utf8=%E2%9C%93&q=is%3Aopen+label%3Atranslation+spanish). Find an issue that nobody is working on -or that has been left unattended during 2 weeks or more (ask first in the chat room)-.  You can take it by simply adding a comment, such as “*Working on it*”.
*  In your forked repository, create a *branch* with a name such as “add/LG-translation-XXX” donde LG is the abbreviated name of the language you're working on, and XXX is the name of the file you're going to modify.  ([more help here](https://github.com/Kunena/Kunena-Forum/wiki/Create-a-new-branch-with-git-and-manage-branches)):
```sh
git checkout -b add/ES-translation-basic-javascript
```
*  Find the JSON file in the ```seeds/challenges``` directory in your local copy. Find the challenge of your interest and modify it adding the name of the challenge in ```"nameLG"``` and its description in ```"descriptionLG"```, where LG is the language of your choice. It's important to keep the proper syntax of the JSON file. You can verify this by installing ```node.js``` and passing the JSON file to the interpreter. For example: ```node seeds/challenges/basic-javascript.json```. You will also be able to verify the syntax by copying and pasting the content of the file in http://jsonlint.com. If you think that you can't continue for a while with the translation, you can leave a comment on the same issue, indicating that another person should continue. You can push your changes so far so the next person won't duplicate your hard work.
* Cuando termines consigna los cambios (*commit*) con una descripción en inglés, tras la descripción y como parte del mensaje de commit, añade "Closes #yyyy" donde yyyy es el número de problema asignado (Esto permite cerrar ese problema automáticamente cuando tu cambio sea fusionado con el repositorio principal.).   Después empuja los cambios (*push*) a tu bifurcación (ver [ayuda completa](https://help.github.com/articles/pushing-to-a-remote/)):
```sh
git commit -m "Challenges of Basic Javascript translated. Closes #4234" seed/challenges/basic-javascript.json 
git push origin add/ES-translation-basic-javascript
```
*  Después desde la página web de tu bifurcación en github.com, haz una solicitud de cambio (*pull request*) a la rama ```staging``` del repositorio principal (ver [ayuda completa](https://help.github.com/articles/creating-a-pull-request/)). Elimina la palabra "Closes #yyyy" del título de la solicitud de cambio, y muevela a la descripción de la solicitud de cambio.  

Otros traductores podrán ver tus cambios y hacer comentarios, los cuales puedes adoptar, o utilizar para hacer correcciones y volver a notificar y empujar. 

Ten en cuenta que los lineamientos para efectuar la traducción han sido creados mientras trabajamos en ella, así que necesariamente tendremos que hacer una revisión final una vez hayamos terminado con la traducción preliminar. Por lo tanto, si los comentarios que recibiste no reflejan un problema serio en tus cambios, puedes solicitar en el área de comentarios que se fusionen tus cambios, y efectuar las correcciones posteriormente.

Otra forma en la que puedes colaborar es revisando y haciendo comentarios en los cambios empujados por otros traductores.


# 3. Generalidades sobre la traducción

Preferimos traducir con “tu” en lugar de “usted” y empleando términos ya usados en el español, dejando posibilidad de introducir nuevos términos preferiblemente de acuerdo a los lineamientos del capítulo 2 de https://mail.gnome.org/archives/gnome-es-list/2011-October/pdfm6xxph1jsZ.pdf


# 4. Glosario

*   array: vector o matriz
*   camper: campista
*   challenge: desafío
*   chat: &nbsp;chat 
*   click: pulsar
*   link: enlace
*   script: programa
*   waypoint: punto de referencia

Si deseas opinar o proponer traducciones para nuevos términos, emplea el canal de chat.  Propón el término y la traducción, si no hay consenso haremos votación. Los términos sometidos a votación hasta el momento pueden verse en: 
https://docs.google.com/spreadsheets/d/1c60Sl4MAAsZ7biCPgur7A4aVqhErIfwrE1SulPqbOGo/edit#gid=0


# 5. Ayudas para traducir empleando Google Translator Toolkit 

Si quieres automatizar un poco más el procedimiento de traducción utilizando Google Translator Toolkit puede servirte: https://github.com/vtamara/fcc_trad


# 6. Instancia de prueba para ver lo avanzado en la traducción a español

Ver el resultado de tus esfuerzos mientras progresas te permite mantener la motivación. Por esta razón, se ha creado una instancia de prueba de la versión en español de FreeCodeCamp para que veas cómo luce la traducción incluyendo los últimos cambios que se han fusionado. Si deseas el detalle de cada desafío traducido hasta el momento, suscríbete e ingresa a: https://defensor.info:3000/map

# 7. Referencias

* Documentación inicial de las fuentes de FreeCodeCamp. https://github.com/FreeCodeCamp/FreeCodeCamp/blob/staging/README.md
* Localización de GNOME a español. https://mail.gnome.org/archives/gnome-es-list/2011-October/pdfm6xxph1jsZ.pdf
* Pull Request Contribute https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Pull-Request-Contribute
* Ayudas para traducir archivos con desafios e instrucciones de FreeCodeCamp usando Google Translator Toolkit. https://github.com/vtamara/fcc_trad/blob/master/README.md
